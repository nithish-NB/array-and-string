class Solution {
    public int romanToInt(String s) {
       
        Map<Character, Integer> map = new HashMap<>();
        map.put('I', 1);
        map.put('V', 5);
        map.put('X', 10);
        map.put('L', 50);
        map.put('C', 100);
        map.put('D', 500);
        map.put('M', 1000);
        int n=s.length();
        int result = map.get(s.charAt(s.length()-1));
        for(int i=s.length()-2;i>=0;i--){
            if(map.get(s.charAt(i))<map.get(s.charAt(i+1))){
                result=result-map.get(s.charAt(i));}
            else{
            result=result+map.get(s.charAt(i));
        }
        }
    return result;}
}
########################################################################
best
int prev=0;
    int result=prev;
    int num=0;
    for(int i=s.length()-1;i>=0;i--){
        switch(s.charAt(i)){
            case 'I': num = 1; break;
            case 'V': num = 5; break;
                case 'X': num = 10; break;
                case 'L': num = 50; break;
                case 'C': num = 100; break;
                case 'D': num = 500; break;
                case 'M': num = 1000; break;
        }
        if(num<prev){
            result=result-num;
        }else{
            result=result+num;
        }
        prev=num;

    }
    return result;}
}
