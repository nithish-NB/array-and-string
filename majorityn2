Best
class Solution {
    public int majorityElement(int[] nums) {
        int count=0;
        int max=0;
        for(int num:nums){
            if(count==0){
                max=num;
            }
            if( num==max){
                count++;
            }else{
                count--;
            }
        }return max;
##############################################################
##brutt force
class Solution {
    public int majorityElement(int[] nums) {
        int max=nums.length/2;
        for(int num:nums){
            int count=0;
            for(int ele:nums){
                if(ele==num){
                    count++;
                }
            }
            if(count>max){
                return num;
            }

        }
##############################################################################
class Solution {
    public int majorityElement(int[] nums) {
        int sum=0;
        int max=0;
        int most=0;
        if(nums.length<2){
            return nums[0];
        }
        Arrays.sort(nums);
        for(int i=0;i<nums.length-1;i++){
            if(nums[i]==nums[i+1]){
                sum=sum+1;
            }else{
                sum=0;
            }
            if(sum>max){
                max=sum;
                most=nums[i];

            }
        }
    return most;}
}
##################################################################################
